version: '3'

services:
  backend:
    build: .
    container_name: 'backend'
    volumes:
      - .:/app
    environment:
      - 'KAFKA_BROKER=kafka:9092'
    ports:
      - '3000:3000'
    depends_on:
      - kafka
    networks:
      - kafka-net

  kafka:
    image: 'bitnami/kafka:2.8.0'
    container_name: 'kafka'
    ports:
      - '9092:9092'
    environment:
      - 'KAFKA_BROKER_ID=1'
      - 'KAFKA_ADVERTISED_HOST_NAME=kafka'
      - 'KAFKA_LISTENERS=PLAINTEXT://:9092'
      - 'KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092'
      - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
      - 'KAFKA_AUTO_CREATE_TOPICS_ENABLE=true'
      - 'KAFKA_DELETE_TOPIC_ENABLE=true'
      - 'KAFKA_CREATE_TOPICS=test:1:1'
      - 'ALLOW_PLAINTEXT_LISTENER=yes'
      - 'KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1'
      - 'KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0'
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  zookeeper:
    image: bitnami/zookeeper:3.7.0
    container_name: 'zookeeper'
    ports:
      - '2181:2181'
    environment:
      - 'ALLOW_ANONYMOUS_LOGIN=yes'
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
